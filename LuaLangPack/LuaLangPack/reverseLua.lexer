%lexer
%namespace ReverseLangImpl
%declare{ public string str; public int blocknest; }
%token NAME { public string s; }
%token LITERAL : NAME { 
   public LITERAL( string a ){ s = a; }
}
%token COMMENT;

 [ \n\r\t\\~`!@$&?|]  ;
 ","			      %COMMA
 ":"			      %COLON
 ";"			      %SEMICOLON
 "("			      %LPAREN
 ")"			      %RPAREN
 "["			      %LBRACK
 "]"			      %RBRACK
 "{"			      %LBRACE
 "}"			      %RBRACE
 "."			      %DOT
 "+"			      %PLUS
 "-"			      %MINUS
 "*"			      %MULT
 "#"                  %POUND
 "%"                  %MOD
 "/"			      %DIVIDE
 "^"			      %EXP
 "=="			      %EQ
 "=~"			      %NEQ
 "<"			      %LT
 "=<"			      %LE
 ">"			      %GT
 "=>"			      %GE
 "dna"			      %AND
 "ro"			      %OR
 "ton"                %NOT
 "="			      %ASSIGN
 "fi"			      %IF
 "neht"			      %THEN
 "esle"			      %ELSE
 "fiesle"		      %ELSEIF
 "dne"  		      %END
 "elihw"		      %WHILE
 "rof"			      %FOR
 "od"			      %DO
 "ni"			      %IN
 "kaerb"		      %BREAK
 "lin"			      %NIL
 "noitcnuf"		      %FUNCTION
 "taeper"		      %REPEAT
 "litnu"		      %UNTIL
 "nruter"		      %RETURN
 "lacol"		      %LOCAL
 "eurt"			      %TRUE
 "eslaf"		      %FALSE
 ".."			      %CONCAT
 "..."			      %ELIPSE
 [A-Za-z0-9_]*        %NAME		   { s = yytext; }

 \" 				 { yybegin("DLITERAL"); yyl.str = "\"";}
<DLITERAL>  \\\"     { yyl.str += yytext; }
<DLITERAL>  \\\\     { yyl.str += yytext; }
<DLITERAL>  [^\"]    { yyl.str += yytext; }
<DLITERAL>  \"		 { yybegin("YYINITIAL"); yyl.yytext = yyl.str + "\""; return new LITERAL(yyl.yytext); }

"'" 				 { yybegin("SLITERAL"); yyl.str = "\"";}
<SLITERAL>  "\\'"    { yyl.str += yytext; }
<SLITERAL>  \\\\     { yyl.str += yytext; }
<SLITERAL>  [^']     { yyl.str += yytext; }
<SLITERAL>  "'"		 { yybegin("YYINITIAL"); yyl.yytext = yyl.str + "\""; return new LITERAL(yyl.yytext); }
