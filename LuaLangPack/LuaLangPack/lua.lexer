%lexer
%declare{ public string str; }
%token LITERAL { 
   public string s;
   public LITERAL( string a ){ s = a; }
}
%token COMMENT {}   
%token NAME { public string s; }
%token NUMBER { public double n; }

 \n|\r|\t|" "      ;
 ","			      %COMMA
 ":"			      %COLON
 ";"			      %SEMICOLON
 "("			      %LPAREN
 ")"			      %RPAREN
 "["			      %LBRACK
 "]"			      %RBRACK
 "{"			      %LBRACE
 "}"			      %RBRACE
 "."			      %DOT
 "+"			      %PLUS
 "-"			      %MINUS
 "*"			      %MULT
 "#"                  %POUND
 "%"                  %MOD
 "/"			      %DIVIDE
 "^"			      %EXP
 "=="			      %EQ
 "~="			      %NEQ
 "<"			      %LT
 "<="			      %LE
 ">"			      %GT
 ">="			      %GE
 "and"			      %AND
 "or"			      %OR
 "not"                %NOT
 "="			      %ASSIGN
 "if"			      %IF
 "then"			      %THEN
 "else"			      %ELSE
 "elseif"		      %ELSEIF
 "end"  		      %END
 "while"		      %WHILE
 "for"			      %FOR
 "do"			      %DO
 "in"			      %IN
 "break"		      %BREAK
 "nil"			      %NIL
 "function"		      %FUNCTION
 "repeat"		      %REPEAT
 "until"		      %UNTIL
 "return"		      %RETURN
 "local"		      %LOCAL
 "true"			      %TRUE
 "false"		      %FALSE
 ".."			      %CONCAT
 "..."			      %ELIPSE
 [a-zA-Z_][A-Za-z0-9_]*  %NAME		{ s = yytext; }
 [0-9]+([.][0-9])?[0-9]* %NUMBER    { n = Convert.ToDouble(yytext); }


 \" 				 { yybegin("LITERAL"); yyl.str = "\"";}
<LITERAL>  \\\"      { yyl.str += yytext; }
<LITERAL>  \\\\      { yyl.str += yytext; }
<LITERAL>  [^\"]     { yyl.str += yytext; }
<LITERAL>  \"		 { yybegin("YYINITIAL"); yyl.yytext = yyl.str + "\""; return new LITERAL(yyl.yytext); }

"--"			{ yybegin("COMMENT"); }
<COMMENT>	    [^\n]	{ }
<COMMENT>	    "\n"	{ yybegin("YYINITIAL"); }

 